simulation: {
  //SLIC, MUSCL, WAF etc 
method: "SLIC"; 

domain:{
  dimensions:{ x: (0., 0.01) };
  
  cells: { x:100 }
  
  boundaryConditions: {
    left: "transmissive";
    right: "transmissive"; 
  };
};

//wall.dat
//wall_2.dat
//wedge_2.dat
//circle.dat
//null.dat

time: {
  end: 0.0006;
};


  #length = 0.01;
  #time = 1e-6;
  #CFL = 0.6;
  #discont = 0.5;

rstates: {
  left = {
    mat = "copper"
    u = [ 0., 500., 1000. ];
    F = [ 0.98, 0., 0., 0.02, 1.,  0.1, 0., 0., 1. ]; 
    S = 1000.;
  };

  right = {
    mat = "copper"
    u = [ 0., 0., 0. ];
    F = [ 1., 0., 0., 0., 1., 0.1, 0., 0., 1. ]; 
    S = 0.;
  };
};

  //The 5 Toro tests exist within the code
  barton: {
    test: 1;
  };  

  riemann:{
    left: { 
      mat: "copper";
      u: 0.0;
      v: 500;
      w: 1000;
      FR: 

    }

  right: {


  }

  }
  
  //State behind shockwave is calculated via the RH conditions
  shock: {
    mach: 2.0;
    diaph: {x: 0.2; y: 0.2};
    norm: {x: -1.0; y: 0.0};
    angle: 180.0;
    //These are ignored when "ambient" is set.
    rho_ahead: 1.225;// 5.0;
    u_ahead: 0.0;
    v_ahead: 0.0;
    p_ahead:  100000.0;//3999.67;
  }

//  discontinuity: {
//    diaph: 0.5;
//    angle: 0.0;
//    rhoL: 1.0;
//    uL: 0.0;
//    vL: 0.0;
//    pL: 1.0;
//    rhoR: 0.1;
//    uR: 0.0;
//    vR: 0.0;
//    pR: 1.0
//  }


//  wedge: {
//    start: 0.0;
//    end: 1.5;
//    angle: 45.0;
//  };


  output: {
    //Where to write output files.
    directory: "/local/data/public/ar694/GPU_CC/";
    
    //Base name for output. Numbers are added for multiple files in format "'name'_000.plt".
    name: "output"
    
    //Output initial conditions before first time-step?
    start_output: true
    
    //Output at end time?
    end_output: true
    
    //At what time intervals output files are written. "0" outputs for all time-steps.  
    interval: 0.0
    
    //After how many time-steps the code outputs. Overwrites "interval". "0" doesn't output at all.
    frequency: 10;
    
    //How many output files are written in total. Code calculates equally spaced times. Overwrites "interval".
    //frames: 
   
   //An unsorted list of specific output times. Added in addition to "start", "end", "interval", "frequency" or "frames".
   //times: 
  };
      
};
